{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "nbsphinx": "hidden"
   },
   "outputs": [],
   "source": [
    "from IPython.display import HTML, display, Image\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true,
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "# Probeset selection with Spapros\n",
    "\n",
    "In this tutorial we showcase how to select a gene set with Spapros.    \n",
    "   \n",
    "Here we use the default settings only. Check out the [advanced selection tutorial](https://spapros.readthedocs.io/en/latest/tutorials/spapros_tutorial_advanced_selection.html) for adjustments for specific use cases and the [end-to-end probe set selection tutorial](https://spapros.readthedocs.io/en/latest/tutorials/spapros_tutorial_end_to_end_selection.html) which includes the probe design."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Import packages"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "pycharm": {
     "is_executing": true,
     "name": "#%%\n"
    }
   },
   "outputs": [],
   "source": [
    "import scanpy as sc\n",
    "import spapros as sp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "scanpy==1.8.2 anndata==0.8.0 umap==0.5.2 numpy==1.21.5 scipy==1.7.3 pandas==1.3.5 scikit-learn==1.0.2 statsmodels==0.13.2 python-igraph==0.9.9 pynndescent==0.5.6\n",
      "spapros==0.1.0\n"
     ]
    }
   ],
   "source": [
    "sc.settings.verbosity = 0\n",
    "sc.logging.print_header()\n",
    "print(f\"spapros=={sp.__version__}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Load and preprocess data\n",
    "\n",
    "For Spapros selections the count data should be log-normalised. Notably genes should **not** be scaled to mean=0 and std=1. We pre-select a given number of highly variable genes, here 1000. In real world applications we typically go for 8000.   \n",
    "    \n",
    "The example data set that we use here has a raw version and a processed version with scaled counts. To get log normalised counts we use the raw version. Cell and gene filters, cell type annotations, and the umap embedding we get from the processed version."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "AnnData object with n_obs × n_vars = 2638 × 1838\n",
       "    obs: 'celltype'\n",
       "    var: 'gene_ids', 'highly_variable', 'means', 'dispersions', 'dispersions_norm'\n",
       "    uns: 'log1p', 'hvg'\n",
       "    obsm: 'X_umap'"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "adata = sc.datasets.pbmc3k()\n",
    "adata_tmp = sc.datasets.pbmc3k_processed()\n",
    "\n",
    "# Get infos from the processed dataset\n",
    "adata = adata[adata_tmp.obs_names,adata_tmp.var_names]\n",
    "adata.obs['celltype'] = adata_tmp.obs['louvain']\n",
    "adata.obsm['X_umap'] = adata_tmp.obsm['X_umap']\n",
    "del adata_tmp\n",
    "\n",
    "# Preprocess counts and get highly variable genes\n",
    "sc.pp.normalize_total(adata)\n",
    "sc.pp.log1p(adata)\n",
    "sc.pp.highly_variable_genes(adata,flavor=\"cell_ranger\",n_top_genes=1000)\n",
    "\n",
    "adata"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sc.pl.umap(adata,color=\"celltype\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Run selection\n",
    "First we create an instance of the `ProbesetSelector` class. We specify the number of genes `n` (20) and the key in `adata.obs` where we find the cell type annotations (`celltype_key=\"celltype\"`). Note that you can specify a `save_dir` to save results during selection and reload them next time a `ProbesetSelector` with the given `save_dir` is instantiated."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The following celltypes' test set sizes for forest training are below min_test_n (=20):\n",
      "\t Dendritic cells : 9\n",
      "\t Megakaryocytes  : 3\n"
     ]
    }
   ],
   "source": [
    "selector = sp.se.ProbesetSelector(adata, n=20, celltype_key=\"celltype\", verbosity=1, save_dir=None)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We get a warning that the cell type clusters for dendritic cells and megakaroycytes are quite small and therefore the \n",
    "genes that are selected to identify these cell types potentially don't generalize very well. The method won't exclude\n",
    "these cell types automatically, it could be done manually though by setting the parameter `celltypes` to a subset of\n",
    "cell types instead of `celltypes=\"all\"`."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Run the central method for probe set selection. (Takes ~5 min for the given example. Note that the progress bars should be properly displayed with jupyter notebook, however jupyter lab or e.g. vscode can lead to incomplete display)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "3867ec9e2d774c90a9cea3e572826e63",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Output()"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"></pre>\n"
      ],
      "text/plain": []
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "selector.select_probeset()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The selected probeset can be examined like this:   \n",
    "(See [here](https://spapros.readthedocs.io/en/latest/se/spapros.se.ProbesetSelector.html#spapros.se.ProbesetSelector.probeset) for a detailed description of the output table)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gene_nr</th>\n",
       "      <th>selection</th>\n",
       "      <th>rank</th>\n",
       "      <th>marker_rank</th>\n",
       "      <th>tree_rank</th>\n",
       "      <th>importance_score</th>\n",
       "      <th>pca_score</th>\n",
       "      <th>pre_selected</th>\n",
       "      <th>prior_selected</th>\n",
       "      <th>pca_selected</th>\n",
       "      <th>celltypes_DE_1vsall</th>\n",
       "      <th>celltypes_DE_specific</th>\n",
       "      <th>celltypes_DE</th>\n",
       "      <th>celltypes_marker</th>\n",
       "      <th>list_only_ct_marker</th>\n",
       "      <th>required_marker</th>\n",
       "      <th>required_list_marker</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>PF4</th>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.810399</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>Megakaryocytes</td>\n",
       "      <td></td>\n",
       "      <td>Megakaryocytes</td>\n",
       "      <td>Megakaryocytes</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>HLA-DPB1</th>\n",
       "      <td>2</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.649235</td>\n",
       "      <td>1.997253</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>B cells,Dendritic cells</td>\n",
       "      <td></td>\n",
       "      <td>B cells,Dendritic cells</td>\n",
       "      <td>B cells,Dendritic cells</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>FCGR3A</th>\n",
       "      <td>3</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.612390</td>\n",
       "      <td>1.321373</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td></td>\n",
       "      <td>FCGR3A+ Monocytes</td>\n",
       "      <td>FCGR3A+ Monocytes</td>\n",
       "      <td>FCGR3A+ Monocytes</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>GZMB</th>\n",
       "      <td>4</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.512924</td>\n",
       "      <td>1.252898</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>NK cells</td>\n",
       "      <td></td>\n",
       "      <td>NK cells</td>\n",
       "      <td>NK cells</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CCL5</th>\n",
       "      <td>5</td>\n",
       "      <td>True</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.478418</td>\n",
       "      <td>2.553322</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>CD8 T cells</td>\n",
       "      <td></td>\n",
       "      <td>CD8 T cells</td>\n",
       "      <td>CD8 T cells</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ARHGAP19</th>\n",
       "      <td>996</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.016906</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SLC22A4</th>\n",
       "      <td>997</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.016718</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DRAXIN</th>\n",
       "      <td>998</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.016547</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C1QC</th>\n",
       "      <td>999</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.014339</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PARS2</th>\n",
       "      <td>1000</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.012845</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1000 rows × 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          gene_nr  selection  rank  marker_rank  tree_rank  importance_score  \\\n",
       "PF4             1       True   1.0          1.0        1.0          1.000000   \n",
       "HLA-DPB1        2       True   1.0          1.0        1.0          0.649235   \n",
       "FCGR3A          3       True   1.0          1.0        1.0          0.612390   \n",
       "GZMB            4       True   1.0          1.0        1.0          0.512924   \n",
       "CCL5            5       True   1.0          1.0        1.0          0.478418   \n",
       "...           ...        ...   ...          ...        ...               ...   \n",
       "ARHGAP19      996      False   NaN          NaN        NaN               NaN   \n",
       "SLC22A4       997      False   NaN          NaN        NaN               NaN   \n",
       "DRAXIN        998      False   NaN          NaN        NaN               NaN   \n",
       "C1QC          999      False   NaN          NaN        NaN               NaN   \n",
       "PARS2        1000      False   NaN          NaN        NaN               NaN   \n",
       "\n",
       "          pca_score  pre_selected  prior_selected  pca_selected  \\\n",
       "PF4        0.810399         False           False          True   \n",
       "HLA-DPB1   1.997253         False           False          True   \n",
       "FCGR3A     1.321373         False           False          True   \n",
       "GZMB       1.252898         False           False          True   \n",
       "CCL5       2.553322         False           False          True   \n",
       "...             ...           ...             ...           ...   \n",
       "ARHGAP19   0.016906         False           False         False   \n",
       "SLC22A4    0.016718         False           False         False   \n",
       "DRAXIN     0.016547         False           False         False   \n",
       "C1QC       0.014339         False           False         False   \n",
       "PARS2      0.012845         False           False         False   \n",
       "\n",
       "              celltypes_DE_1vsall celltypes_DE_specific  \\\n",
       "PF4                Megakaryocytes                         \n",
       "HLA-DPB1  B cells,Dendritic cells                         \n",
       "FCGR3A                                FCGR3A+ Monocytes   \n",
       "GZMB                     NK cells                         \n",
       "CCL5                  CD8 T cells                         \n",
       "...                           ...                   ...   \n",
       "ARHGAP19                                                  \n",
       "SLC22A4                                                   \n",
       "DRAXIN                                                    \n",
       "C1QC                                                      \n",
       "PARS2                                                     \n",
       "\n",
       "                     celltypes_DE         celltypes_marker  \\\n",
       "PF4                Megakaryocytes           Megakaryocytes   \n",
       "HLA-DPB1  B cells,Dendritic cells  B cells,Dendritic cells   \n",
       "FCGR3A          FCGR3A+ Monocytes        FCGR3A+ Monocytes   \n",
       "GZMB                     NK cells                 NK cells   \n",
       "CCL5                  CD8 T cells              CD8 T cells   \n",
       "...                           ...                      ...   \n",
       "ARHGAP19                                                     \n",
       "SLC22A4                                                      \n",
       "DRAXIN                                                       \n",
       "C1QC                                                         \n",
       "PARS2                                                        \n",
       "\n",
       "          list_only_ct_marker  required_marker  required_list_marker  \n",
       "PF4                     False             True                 False  \n",
       "HLA-DPB1                False             True                 False  \n",
       "FCGR3A                  False             True                 False  \n",
       "GZMB                    False             True                 False  \n",
       "CCL5                    False             True                 False  \n",
       "...                       ...              ...                   ...  \n",
       "ARHGAP19                False            False                 False  \n",
       "SLC22A4                 False            False                 False  \n",
       "DRAXIN                  False            False                 False  \n",
       "C1QC                    False            False                 False  \n",
       "PARS2                   False            False                 False  \n",
       "\n",
       "[1000 rows x 17 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "selector.probeset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The list of selected genes can be retrieved with"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['PF4', 'HLA-DPB1', 'FCGR3A', 'GZMB', 'CCL5', 'S100A8', 'IL32',\n",
       "       'HLA-DQA1', 'NKG7', 'AIF1', 'CD79A', 'LTB', 'TYROBP', 'HLA-DMA', 'GZMK',\n",
       "       'HLA-DRB1', 'FCN1', 'S100A11', 'GNLY', 'GZMH'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "selector.probeset.index[selector.probeset.selection]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Vizualize and investigate the results"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's first plot the mean expression in each cell type cluster with some additional information for the selected genes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "scrolled": false,
    "tags": [
     "nbsphinx-thumbnail"
    ]
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 626.4x279.36 with 7 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sp.pl.masked_dotplot(adata, selector)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For each cell type the Spapros markers are those that build a combinatorial rule to classify the cell type. Often you find cell type specific markers, and negative markers. When selecting genes for high numbers of cell types including similar clusters the rules tend to show more sophisticated combinatorics."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The Spapros selection procedure consists of multiple steps, we can also investigate how many genes originate from the different steps:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 256x320 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "selector.plot_gene_overlap()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- All finally selected 20 genes occured in the PCA-based pre-selection which selects genes that capture a high amount of variation\n",
    "- they strongly overlap with the (16) differentially expressed genes since marker genes are one source of high variation in transcriptomics data. The overlap is especially high for datasets with only a few cell type clusters that are also well separated as in the given example.\n",
    "- The first DE tests to train optimal classification trees are tests between each cell type and all other cell types as background (DE_1vsall). To further optimise the trees we run DE tests between cell type clusters that are more difficult to distinguish (DE_specific). We find 4 genes that originate from the specific tests that didn't occur in the 1 vs all tests."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## What's next?\n",
    "\n",
    "You can now evaluate the selected probeset. See our [basic evaluation tutorial](https://spapros.readthedocs.io/en/latest/tutorials/spapros_tutorial_basic_evaluation.html).\n",
    "\n",
    "If you want to customize and improve the probeset selection, have a look at the [advanced selection tutorial](https://spapros.readthedocs.io/en/latest/tutorials/spapros_tutorial_advanced_selection.html).\n",
    "\n",
    "Check out the [end-to-end selection tutorial](https://spapros.readthedocs.io/en/latest/tutorials/spapros_tutorial_end_to_end_selection.html) for the full pipline that includes probe design and gene panel selection."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  }
 ],
 "metadata": {
  "celltoolbar": "Edit Metadata",
  "interpreter": {
   "hash": "b6b34c492024ffa29961e234fc8481d2351cf3e71b96e865103acdbed47bd476"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.13"
  },
  "latex_envs": {
   "LaTeX_envs_menu_present": true,
   "autoclose": false,
   "autocomplete": true,
   "bibliofile": "biblio.bib",
   "cite_by": "apalike",
   "current_citInitial": 1,
   "eqLabelWithNumbers": true,
   "eqNumInitial": 1,
   "hotkeys": {
    "equation": "Ctrl-E",
    "itemize": "Ctrl-I"
   },
   "labels_anchors": false,
   "latex_user_defs": false,
   "report_style_numbering": false,
   "user_envs_cfg": false
  },
  "pycharm": {
   "stem_cell": {
    "cell_type": "raw",
    "metadata": {
     "collapsed": false
    },
    "source": [
     "%matplotlib inline\n"
    ]
   }
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "02393dfba5ab4f1cabd8bb6744f02214": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "1347918bb0b1472ca19c1f4006430ac1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "layout": "IPY_MODEL_c87e2acba092400ea7935dbae8e1e240",
       "style": "IPY_MODEL_2f06875313224f359890c437723a5589",
       "value": "100%"
      }
     },
     "211e831c42474aa5b57918a706a869fd": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "259715f79cc949e4ae815d20e662da4a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "2689382cdcd042e3ab97b1eb9c5b79d3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "2ab055d6db5c4930b6e9abf236d0bfdb": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "2b7002d82fb944678e291b270e256c6c": {
      "model_module": "@jupyter-widgets/output",
      "model_module_version": "1.0.0",
      "model_name": "OutputModel",
      "state": {
       "layout": "IPY_MODEL_3e42c611c37e40c4bc1ad6f44dd8a96d",
       "outputs": [
        {
         "data": {
          "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #000000; text-decoration-color: #000000; font-weight: bold\">SPAPROS PROBESET SELECTION:                                                                 </span> \n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Select pca genes..........................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Train baseline forest based on DE genes...................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 4/4</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:01:59</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Select DE genes.........................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 8/8</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Train prior forest for DE_baseline forest...............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:20</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Iteratively add DE genes to DE_baseline forest..........</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:01:04</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Train final baseline trees on all celltypes.............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:33</span>\n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Train final forests.......................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:36</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Train forest on pre/prior/pca selected genes............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:36</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Initial results are good enough. No genes are added.......................................</span> \n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Compile probeset list.....................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n<span style=\"color: #000000; text-decoration-color: #000000; font-weight: bold\">FINISHED</span>  \n          \n</pre>\n",
          "text/plain": "\u001b[1;30mSPAPROS PROBESET SELECTION:                                                                 \u001b[0m \n\u001b[1;34mSelect pca genes..........................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n\u001b[1;34mTrain baseline forest based on DE genes...................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 4/4\u001b[0m \u001b[33m0:01:59\u001b[0m\n  \u001b[1;2;36mSelect DE genes.........................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 8/8\u001b[0m \u001b[33m0:00:00\u001b[0m\n  \u001b[1;2;36mTrain prior forest for DE_baseline forest...............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:00:20\u001b[0m\n  \u001b[1;2;36mIteratively add DE genes to DE_baseline forest..........\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:01:04\u001b[0m\n  \u001b[1;2;36mTrain final baseline trees on all celltypes.............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:00:33\u001b[0m\n\u001b[1;34mTrain final forests.......................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:00:36\u001b[0m\n  \u001b[1;2;36mTrain forest on pre/prior/pca selected genes............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:00:36\u001b[0m\n  \u001b[1;2;36mInitial results are good enough. No genes are added.......................................\u001b[0m \n\u001b[1;34mCompile probeset list.....................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n\u001b[1;30mFINISHED\u001b[0m  \n          \n"
         },
         "metadata": {},
         "output_type": "display_data"
        }
       ]
      }
     },
     "2ba633ee93584c818eb0575e4281dd53": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "2f06875313224f359890c437723a5589": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "30272550a3f84a218235866669751869": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "34315b97b262443fab7e426057f2f510": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "34fce517e03d4e52ace44e570d5a71a1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "layout": "IPY_MODEL_761116eeed6c40ff8005ce3321dd0ecf",
       "style": "IPY_MODEL_e2dbfd3cdab049e7aafe01b95e9009e4",
       "value": "100%"
      }
     },
     "352c8fe6f9d24144a5eaed0c432e93b6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "bar_style": "success",
       "layout": "IPY_MODEL_92f06a5939424ade856f043bc0f71f79",
       "max": 24653425,
       "style": "IPY_MODEL_c9cdb33283074f8ab44a529e45406819",
       "value": 24653425
      }
     },
     "3772758621a44757b89efe2985b2758b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "38c3fbfcb250437486d8d26293374e5e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "children": [
        "IPY_MODEL_85c1cfa3ea2e47d288b348f032f4c5c4",
        "IPY_MODEL_c3f5c0e630124189a05ab0ab81338dcc",
        "IPY_MODEL_56d9accd7ee94fd4876a010298adde9d"
       ],
       "layout": "IPY_MODEL_af9cb6ec7a0346ed9cedbf123b5cf3e1"
      }
     },
     "3e42c611c37e40c4bc1ad6f44dd8a96d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "429642e62d3c4db99884b2779a65ea52": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "467e528b2fe64849939bdbb4803d8a23": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "49e2d4dd5908400dac197f0f7a9c4a85": {
      "model_module": "@jupyter-widgets/output",
      "model_module_version": "1.0.0",
      "model_name": "OutputModel",
      "state": {
       "layout": "IPY_MODEL_aacd2c6b6b984795bf04b39d6e17eb16",
       "outputs": [
        {
         "data": {
          "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Select pca genes..................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Train baseline forest based on DE genes...........</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:02:57</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Select DE genes.................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">8/8</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Train prior forest for DE_baseline forest.......</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:30</span>\n    <span style=\"color: #008000; text-decoration-color: #008000; font-weight: bold\">Train trees...................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">50/50</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:14</span>\n    <span style=\"color: #008000; text-decoration-color: #008000; font-weight: bold\">Train trees...................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">50/50</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:06</span>\n    <span style=\"color: #008000; text-decoration-color: #008000; font-weight: bold\">Train trees...................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">50/50</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:06</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Iteratively add DE genes to DE_baseline forest...</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:01:34</span>\n    <span style=\"color: #008000; text-decoration-color: #008000; font-weight: bold\">Select DE genes for celltypes with outliers...</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">5/5</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Select DE genes for CD14+ Monocytes.........</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Select DE genes for CD4 T cells.............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Select DE genes for CD8 T cells.............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Select DE genes for Dendritic cells.........</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Select DE genes for FCGR3A+ Monocytes.......</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n    <span style=\"color: #008000; text-decoration-color: #008000; font-weight: bold\">Train trees with added DE genes...............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:23</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Train trees.................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">50/50</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:06</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Train trees.................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">50/50</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:06</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Train trees.................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">50/50</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:07</span>\n    <span style=\"color: #008000; text-decoration-color: #008000; font-weight: bold\">Select DE genes for celltypes with outliers...</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">5/5</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Select DE genes for CD14+ Monocytes.........</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Select DE genes for CD4 T cells.............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Select DE genes for CD8 T cells.............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Select DE genes for Dendritic cells.........</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Select DE genes for FCGR3A+ Monocytes.......</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n    <span style=\"color: #008000; text-decoration-color: #008000; font-weight: bold\">Train trees with added DE genes...............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:25</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Train trees.................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">50/50</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:07</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Train trees.................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">50/50</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:07</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Train trees.................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">50/50</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:07</span>\n    <span style=\"color: #008000; text-decoration-color: #008000; font-weight: bold\">Select DE genes for celltypes with outliers...</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">5/5</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Select DE genes for CD14+ Monocytes.........</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Select DE genes for CD4 T cells.............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Select DE genes for CD8 T cells.............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Select DE genes for Dendritic cells.........</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Select DE genes for FCGR3A+ Monocytes.......</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n    <span style=\"color: #008000; text-decoration-color: #008000; font-weight: bold\">Train trees with added DE genes...............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:43</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Train trees.................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">50/50</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:14</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Train trees.................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">50/50</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:13</span>\n      <span style=\"color: #008000; text-decoration-color: #008000\">Train trees.................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">50/50</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:12</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Train final baseline trees on all celltypes.....</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:52</span>\n    <span style=\"color: #008000; text-decoration-color: #008000; font-weight: bold\">Train trees...................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">50/50</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:18</span>\n    <span style=\"color: #008000; text-decoration-color: #008000; font-weight: bold\">Train trees...................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">50/50</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:15</span>\n    <span style=\"color: #008000; text-decoration-color: #008000; font-weight: bold\">Train trees...................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">50/50</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:14</span>\n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Train final forests...............................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">4/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:51</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Train forest on pre/prior/pca selected genes....</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:51</span>\n    <span style=\"color: #008000; text-decoration-color: #008000; font-weight: bold\">Train trees...................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">50/50</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:17</span>\n    <span style=\"color: #008000; text-decoration-color: #008000; font-weight: bold\">Train trees...................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">50/50</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:14</span>\n    <span style=\"color: #008000; text-decoration-color: #008000; font-weight: bold\">Train trees...................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">50/50</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:14</span>\n    <span style=\"color: #008000; text-decoration-color: #008000; font-weight: bold\">Initial results are good enough. No genes are added.....................................</span> \n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Compile probeset list.............................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span> <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n</pre>\n",
          "text/plain": "\u001b[1;34mSelect pca genes..................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n\u001b[1;34mTrain baseline forest based on DE genes...........\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m3/3\u001b[0m \u001b[33m0:02:57\u001b[0m\n  \u001b[1;2;36mSelect DE genes.................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m8/8\u001b[0m \u001b[33m0:00:00\u001b[0m\n  \u001b[1;2;36mTrain prior forest for DE_baseline forest.......\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m3/3\u001b[0m \u001b[33m0:00:30\u001b[0m\n    \u001b[1;32mTrain trees...................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m50/50\u001b[0m \u001b[33m0:00:14\u001b[0m\n    \u001b[1;32mTrain trees...................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m50/50\u001b[0m \u001b[33m0:00:06\u001b[0m\n    \u001b[1;32mTrain trees...................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m50/50\u001b[0m \u001b[33m0:00:06\u001b[0m\n  \u001b[1;2;36mIteratively add DE genes to DE_baseline forest...\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m3/3\u001b[0m \u001b[33m0:01:34\u001b[0m\n    \u001b[1;32mSelect DE genes for celltypes with outliers...\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m5/5\u001b[0m \u001b[33m0:00:00\u001b[0m\n      \u001b[32mSelect DE genes for CD14+ Monocytes.........\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n      \u001b[32mSelect DE genes for CD4 T cells.............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n      \u001b[32mSelect DE genes for CD8 T cells.............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n      \u001b[32mSelect DE genes for Dendritic cells.........\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n      \u001b[32mSelect DE genes for FCGR3A+ Monocytes.......\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n    \u001b[1;32mTrain trees with added DE genes...............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m3/3\u001b[0m \u001b[33m0:00:23\u001b[0m\n      \u001b[32mTrain trees.................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m50/50\u001b[0m \u001b[33m0:00:06\u001b[0m\n      \u001b[32mTrain trees.................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m50/50\u001b[0m \u001b[33m0:00:06\u001b[0m\n      \u001b[32mTrain trees.................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m50/50\u001b[0m \u001b[33m0:00:07\u001b[0m\n    \u001b[1;32mSelect DE genes for celltypes with outliers...\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m5/5\u001b[0m \u001b[33m0:00:00\u001b[0m\n      \u001b[32mSelect DE genes for CD14+ Monocytes.........\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n      \u001b[32mSelect DE genes for CD4 T cells.............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n      \u001b[32mSelect DE genes for CD8 T cells.............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n      \u001b[32mSelect DE genes for Dendritic cells.........\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n      \u001b[32mSelect DE genes for FCGR3A+ Monocytes.......\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n    \u001b[1;32mTrain trees with added DE genes...............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m3/3\u001b[0m \u001b[33m0:00:25\u001b[0m\n      \u001b[32mTrain trees.................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m50/50\u001b[0m \u001b[33m0:00:07\u001b[0m\n      \u001b[32mTrain trees.................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m50/50\u001b[0m \u001b[33m0:00:07\u001b[0m\n      \u001b[32mTrain trees.................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m50/50\u001b[0m \u001b[33m0:00:07\u001b[0m\n    \u001b[1;32mSelect DE genes for celltypes with outliers...\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m5/5\u001b[0m \u001b[33m0:00:00\u001b[0m\n      \u001b[32mSelect DE genes for CD14+ Monocytes.........\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n      \u001b[32mSelect DE genes for CD4 T cells.............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n      \u001b[32mSelect DE genes for CD8 T cells.............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n      \u001b[32mSelect DE genes for Dendritic cells.........\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n      \u001b[32mSelect DE genes for FCGR3A+ Monocytes.......\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n    \u001b[1;32mTrain trees with added DE genes...............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m3/3\u001b[0m \u001b[33m0:00:43\u001b[0m\n      \u001b[32mTrain trees.................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m50/50\u001b[0m \u001b[33m0:00:14\u001b[0m\n      \u001b[32mTrain trees.................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m50/50\u001b[0m \u001b[33m0:00:13\u001b[0m\n      \u001b[32mTrain trees.................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m50/50\u001b[0m \u001b[33m0:00:12\u001b[0m\n  \u001b[1;2;36mTrain final baseline trees on all celltypes.....\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m3/3\u001b[0m \u001b[33m0:00:52\u001b[0m\n    \u001b[1;32mTrain trees...................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m50/50\u001b[0m \u001b[33m0:00:18\u001b[0m\n    \u001b[1;32mTrain trees...................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m50/50\u001b[0m \u001b[33m0:00:15\u001b[0m\n    \u001b[1;32mTrain trees...................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m50/50\u001b[0m \u001b[33m0:00:14\u001b[0m\n\u001b[1;34mTrain final forests...............................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m4/3\u001b[0m \u001b[33m0:00:51\u001b[0m\n  \u001b[1;2;36mTrain forest on pre/prior/pca selected genes....\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m3/3\u001b[0m \u001b[33m0:00:51\u001b[0m\n    \u001b[1;32mTrain trees...................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m50/50\u001b[0m \u001b[33m0:00:17\u001b[0m\n    \u001b[1;32mTrain trees...................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m50/50\u001b[0m \u001b[33m0:00:14\u001b[0m\n    \u001b[1;32mTrain trees...................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m50/50\u001b[0m \u001b[33m0:00:14\u001b[0m\n    \u001b[1;32mInitial results are good enough. No genes are added.....................................\u001b[0m \n\u001b[1;34mCompile probeset list.............................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n"
         },
         "metadata": {},
         "output_type": "display_data"
        }
       ]
      }
     },
     "49ea189bd7794d90a2cd05fec0d24754": {
      "model_module": "@jupyter-widgets/output",
      "model_module_version": "1.0.0",
      "model_name": "OutputModel",
      "state": {
       "layout": "IPY_MODEL_9f5321848cec4d3e82cdc0ecafb5bbb6",
       "outputs": [
        {
         "data": {
          "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #000000; text-decoration-color: #000000; font-weight: bold\">SPAPROS PROBESET SELECTION:                                                                 </span> \n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Select pca genes..........................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Train baseline forest based on DE genes...................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 4/4</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:01:55</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Select DE genes.........................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 8/8</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Train prior forest for DE_baseline forest...............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:20</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Iteratively add DE genes to DE_baseline forest..........</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:01:01</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Train final baseline trees on all celltypes.............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:32</span>\n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Train final forests.......................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:35</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Train forest on pre/prior/pca selected genes............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:35</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Initial results are good enough. No genes are added.......................................</span> \n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Compile probeset list.....................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n<span style=\"color: #000000; text-decoration-color: #000000; font-weight: bold\">FINISHED</span>  \n          \n</pre>\n",
          "text/plain": "\u001b[1;30mSPAPROS PROBESET SELECTION:                                                                 \u001b[0m \n\u001b[1;34mSelect pca genes..........................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n\u001b[1;34mTrain baseline forest based on DE genes...................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 4/4\u001b[0m \u001b[33m0:01:55\u001b[0m\n  \u001b[1;2;36mSelect DE genes.........................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 8/8\u001b[0m \u001b[33m0:00:00\u001b[0m\n  \u001b[1;2;36mTrain prior forest for DE_baseline forest...............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:00:20\u001b[0m\n  \u001b[1;2;36mIteratively add DE genes to DE_baseline forest..........\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:01:01\u001b[0m\n  \u001b[1;2;36mTrain final baseline trees on all celltypes.............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:00:32\u001b[0m\n\u001b[1;34mTrain final forests.......................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:00:35\u001b[0m\n  \u001b[1;2;36mTrain forest on pre/prior/pca selected genes............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:00:35\u001b[0m\n  \u001b[1;2;36mInitial results are good enough. No genes are added.......................................\u001b[0m \n\u001b[1;34mCompile probeset list.....................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n\u001b[1;30mFINISHED\u001b[0m  \n          \n"
         },
         "metadata": {},
         "output_type": "display_data"
        }
       ]
      }
     },
     "4bee46f5c01e4de6a7c8e78f813f44b7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "56d9accd7ee94fd4876a010298adde9d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "layout": "IPY_MODEL_de3bde42a33340ab9a37b61be5e100da",
       "style": "IPY_MODEL_02393dfba5ab4f1cabd8bb6744f02214",
       "value": " 5.58M/5.58M [00:00&lt;00:00, 15.2MB/s]"
      }
     },
     "63acd4bd944743d4a0dba149c05552a5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "layout": "IPY_MODEL_2ba633ee93584c818eb0575e4281dd53",
       "style": "IPY_MODEL_79ce5d7e69d647b7a77742967bd878f6",
       "value": " 23.5M/23.5M [00:00&lt;00:00, 86.1MB/s]"
      }
     },
     "722084e07bba4cca8598e4fcc303924e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "73185aa9a33144669163f7d675ce0dab": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "761116eeed6c40ff8005ce3321dd0ecf": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "79ce5d7e69d647b7a77742967bd878f6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "85c1cfa3ea2e47d288b348f032f4c5c4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "layout": "IPY_MODEL_c6ac1062b46940da983e4e4f6844ea23",
       "style": "IPY_MODEL_429642e62d3c4db99884b2779a65ea52",
       "value": "100%"
      }
     },
     "9283dc66370642ae917f7c90ee003222": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "children": [
        "IPY_MODEL_1347918bb0b1472ca19c1f4006430ac1",
        "IPY_MODEL_352c8fe6f9d24144a5eaed0c432e93b6",
        "IPY_MODEL_63acd4bd944743d4a0dba149c05552a5"
       ],
       "layout": "IPY_MODEL_c35b7ce926cf48e5984a5e4fffddae55"
      }
     },
     "92f06a5939424ade856f043bc0f71f79": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "9f5321848cec4d3e82cdc0ecafb5bbb6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "a207e774f3fe46bab34f8379961375cc": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "bar_style": "success",
       "layout": "IPY_MODEL_73185aa9a33144669163f7d675ce0dab",
       "max": 5855727,
       "style": "IPY_MODEL_30272550a3f84a218235866669751869",
       "value": 5855727
      }
     },
     "a6a675381f6c4491bdc27506433c3c34": {
      "model_module": "@jupyter-widgets/output",
      "model_module_version": "1.0.0",
      "model_name": "OutputModel",
      "state": {
       "layout": "IPY_MODEL_d5bea3c5da264630b86d93b78b612bb1",
       "outputs": [
        {
         "data": {
          "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #000000; text-decoration-color: #000000; font-weight: bold\">SPAPROS PROBESET SELECTION:                                                                 </span> \n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Select pca genes..........................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Train baseline forest based on DE genes...................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 4/4</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:02:22</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Select DE genes.........................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 8/8</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Train prior forest for DE_baseline forest...............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:27</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Iteratively add DE genes to DE_baseline forest..........</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:01:19</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Train final baseline trees on all celltypes.............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:35</span>\n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Train final forests.......................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:34</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Train forest on pre/prior/pca selected genes............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:34</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Initial results are good enough. No genes are added.......................................</span> \n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Compile probeset list.....................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n<span style=\"color: #000000; text-decoration-color: #000000; font-weight: bold\">FINISHED</span>  \n          \n</pre>\n",
          "text/plain": "\u001b[1;30mSPAPROS PROBESET SELECTION:                                                                 \u001b[0m \n\u001b[1;34mSelect pca genes..........................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n\u001b[1;34mTrain baseline forest based on DE genes...................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 4/4\u001b[0m \u001b[33m0:02:22\u001b[0m\n  \u001b[1;2;36mSelect DE genes.........................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 8/8\u001b[0m \u001b[33m0:00:00\u001b[0m\n  \u001b[1;2;36mTrain prior forest for DE_baseline forest...............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:00:27\u001b[0m\n  \u001b[1;2;36mIteratively add DE genes to DE_baseline forest..........\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:01:19\u001b[0m\n  \u001b[1;2;36mTrain final baseline trees on all celltypes.............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:00:35\u001b[0m\n\u001b[1;34mTrain final forests.......................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:00:34\u001b[0m\n  \u001b[1;2;36mTrain forest on pre/prior/pca selected genes............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:00:34\u001b[0m\n  \u001b[1;2;36mInitial results are good enough. No genes are added.......................................\u001b[0m \n\u001b[1;34mCompile probeset list.....................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n\u001b[1;30mFINISHED\u001b[0m  \n          \n"
         },
         "metadata": {},
         "output_type": "display_data"
        }
       ]
      }
     },
     "aacd2c6b6b984795bf04b39d6e17eb16": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "af9cb6ec7a0346ed9cedbf123b5cf3e1": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "b4e7859f462541f2b653b9e846e42460": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "layout": "IPY_MODEL_4bee46f5c01e4de6a7c8e78f813f44b7",
       "style": "IPY_MODEL_e5ededa334b147dca313158ac29a7b4e",
       "value": " 5.58M/5.58M [00:00&lt;00:00, 13.3MB/s]"
      }
     },
     "b8d9681a199d460abcca6e1a33534961": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "layout": "IPY_MODEL_e8fb44ee9a8940d295f014af2b17da82",
       "style": "IPY_MODEL_259715f79cc949e4ae815d20e662da4a",
       "value": "100%"
      }
     },
     "c35b7ce926cf48e5984a5e4fffddae55": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "c3f5c0e630124189a05ab0ab81338dcc": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "bar_style": "success",
       "layout": "IPY_MODEL_211e831c42474aa5b57918a706a869fd",
       "max": 5855727,
       "style": "IPY_MODEL_467e528b2fe64849939bdbb4803d8a23",
       "value": 5855727
      }
     },
     "c6ac1062b46940da983e4e4f6844ea23": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "c87e2acba092400ea7935dbae8e1e240": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "c8d5c4cde14b4229ab87ffc7ca65ed82": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "children": [
        "IPY_MODEL_34fce517e03d4e52ace44e570d5a71a1",
        "IPY_MODEL_f8f9c052a3f54a71a957672c2f3a7d06",
        "IPY_MODEL_f955d07419274b21b62b79bf2b85dbaa"
       ],
       "layout": "IPY_MODEL_2ab055d6db5c4930b6e9abf236d0bfdb"
      }
     },
     "c9cdb33283074f8ab44a529e45406819": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "d157dda52f164e5293cdbf02433609c3": {
      "model_module": "@jupyter-widgets/output",
      "model_module_version": "1.0.0",
      "model_name": "OutputModel",
      "state": {
       "layout": "IPY_MODEL_2689382cdcd042e3ab97b1eb9c5b79d3",
       "outputs": [
        {
         "data": {
          "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #000000; text-decoration-color: #000000; font-weight: bold\">SPAPROS PROBESET SELECTION:                                                                 </span> \n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Select pca genes..........................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Train baseline forest based on DE genes...................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 4/4</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:01:56</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Select DE genes.........................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 8/8</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Train prior forest for DE_baseline forest...............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:20</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Iteratively add DE genes to DE_baseline forest..........</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:01:03</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Train final baseline trees on all celltypes.............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:32</span>\n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Train final forests.......................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:36</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Train forest on pre/prior/pca selected genes............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:36</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Initial results are good enough. No genes are added.......................................</span> \n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Compile probeset list.....................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n<span style=\"color: #000000; text-decoration-color: #000000; font-weight: bold\">FINISHED</span>  \n          \n</pre>\n",
          "text/plain": "\u001b[1;30mSPAPROS PROBESET SELECTION:                                                                 \u001b[0m \n\u001b[1;34mSelect pca genes..........................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n\u001b[1;34mTrain baseline forest based on DE genes...................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 4/4\u001b[0m \u001b[33m0:01:56\u001b[0m\n  \u001b[1;2;36mSelect DE genes.........................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 8/8\u001b[0m \u001b[33m0:00:00\u001b[0m\n  \u001b[1;2;36mTrain prior forest for DE_baseline forest...............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:00:20\u001b[0m\n  \u001b[1;2;36mIteratively add DE genes to DE_baseline forest..........\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:01:03\u001b[0m\n  \u001b[1;2;36mTrain final baseline trees on all celltypes.............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:00:32\u001b[0m\n\u001b[1;34mTrain final forests.......................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:00:36\u001b[0m\n  \u001b[1;2;36mTrain forest on pre/prior/pca selected genes............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:00:36\u001b[0m\n  \u001b[1;2;36mInitial results are good enough. No genes are added.......................................\u001b[0m \n\u001b[1;34mCompile probeset list.....................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n\u001b[1;30mFINISHED\u001b[0m  \n          \n"
         },
         "metadata": {},
         "output_type": "display_data"
        }
       ]
      }
     },
     "d53017f083af4a1c94742cb24fb109f0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "d5bea3c5da264630b86d93b78b612bb1": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "de3bde42a33340ab9a37b61be5e100da": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "e0c16f34005a461194310c27cd28f2c1": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "e2dbfd3cdab049e7aafe01b95e9009e4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "e5ededa334b147dca313158ac29a7b4e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "e8fb44ee9a8940d295f014af2b17da82": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "ef40f5ee07604bca806a96b3ab85529f": {
      "model_module": "@jupyter-widgets/output",
      "model_module_version": "1.0.0",
      "model_name": "OutputModel",
      "state": {
       "layout": "IPY_MODEL_3772758621a44757b89efe2985b2758b",
       "outputs": [
        {
         "data": {
          "text/html": "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #000000; text-decoration-color: #000000; font-weight: bold\">SPAPROS PROBESET SELECTION:                                                                 </span> \n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Select pca genes..........................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Train baseline forest based on DE genes...................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 4/4</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:04:12</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Select DE genes.........................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 8/8</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Train prior forest for DE_baseline forest...............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:54</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Iteratively add DE genes to DE_baseline forest..........</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:02:13</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Train final baseline trees on all celltypes.............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:01:04</span>\n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Train final forests.......................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:01:13</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Train forest on pre/prior/pca selected genes............</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\"> 3/3</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:01:13</span>\n  <span style=\"color: #7fbfbf; text-decoration-color: #7fbfbf; font-weight: bold\">Initial results are good enough. No genes are added.......................................</span> \n<span style=\"color: #000080; text-decoration-color: #000080; font-weight: bold\">Compile probeset list.....................................</span> <span style=\"color: #729c1f; text-decoration-color: #729c1f\">━━━━━━━━━━━━━━━━━━━━</span>  <span style=\"color: #800080; text-decoration-color: #800080\">100%</span> <span style=\"color: #808000; text-decoration-color: #808000\">0:00:00</span>\n<span style=\"color: #000000; text-decoration-color: #000000; font-weight: bold\">FINISHED</span>  \n          \n</pre>\n",
          "text/plain": "\u001b[1;30mSPAPROS PROBESET SELECTION:                                                                 \u001b[0m \n\u001b[1;34mSelect pca genes..........................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n\u001b[1;34mTrain baseline forest based on DE genes...................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 4/4\u001b[0m \u001b[33m0:04:12\u001b[0m\n  \u001b[1;2;36mSelect DE genes.........................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 8/8\u001b[0m \u001b[33m0:00:00\u001b[0m\n  \u001b[1;2;36mTrain prior forest for DE_baseline forest...............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:00:54\u001b[0m\n  \u001b[1;2;36mIteratively add DE genes to DE_baseline forest..........\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:02:13\u001b[0m\n  \u001b[1;2;36mTrain final baseline trees on all celltypes.............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:01:04\u001b[0m\n\u001b[1;34mTrain final forests.......................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:01:13\u001b[0m\n  \u001b[1;2;36mTrain forest on pre/prior/pca selected genes............\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m 3/3\u001b[0m \u001b[33m0:01:13\u001b[0m\n  \u001b[1;2;36mInitial results are good enough. No genes are added.......................................\u001b[0m \n\u001b[1;34mCompile probeset list.....................................\u001b[0m \u001b[38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━\u001b[0m  \u001b[35m100%\u001b[0m \u001b[33m0:00:00\u001b[0m\n\u001b[1;30mFINISHED\u001b[0m  \n          \n"
         },
         "metadata": {},
         "output_type": "display_data"
        }
       ]
      }
     },
     "ef42fa0448ad4dd1a75f21963ff6b962": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "children": [
        "IPY_MODEL_b8d9681a199d460abcca6e1a33534961",
        "IPY_MODEL_a207e774f3fe46bab34f8379961375cc",
        "IPY_MODEL_b4e7859f462541f2b653b9e846e42460"
       ],
       "layout": "IPY_MODEL_d53017f083af4a1c94742cb24fb109f0"
      }
     },
     "f8f9c052a3f54a71a957672c2f3a7d06": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "bar_style": "success",
       "layout": "IPY_MODEL_e0c16f34005a461194310c27cd28f2c1",
       "max": 24653425,
       "style": "IPY_MODEL_34315b97b262443fab7e426057f2f510",
       "value": 24653425
      }
     },
     "f955d07419274b21b62b79bf2b85dbaa": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "layout": "IPY_MODEL_722084e07bba4cca8598e4fcc303924e",
       "style": "IPY_MODEL_fa3130def609451f81958ae6175d79b1",
       "value": " 23.5M/23.5M [00:00&lt;00:00, 80.2MB/s]"
      }
     },
     "fa3130def609451f81958ae6175d79b1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
